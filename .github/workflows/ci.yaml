name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:

  cache-key:
    runs-on: ubuntu-latest
    name: Create cache key suffix
    outputs:
      suffix: ${{ steps.generate.outputs.suffix }}
    steps:
      - id: generate
        name: Generate suffix
        run: echo "suffix=$RANDOM" >> $GITHUB_OUTPUT

  build-jsapi:
    runs-on: ubuntu-latest
    name: Build JSAPI
    needs: cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Install wasm-pack
        uses: jetli/wasm-pack-action@v0.4.0
      - name: Build
        run: wasm-pack build jsapi --target bundler --features gdbstate
      - name: Save build outputs
        uses: actions/cache/save@v3
        with:
          path: jsapi/pkg
          key: jsapi-package-${{ needs.cache-key.outputs.suffix }}
  
  npm-install:
    runs-on: ubuntu-latest
    name: Install Node packages
    needs:
      - build-jsapi
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Load JSAPI package
        uses: actions/cache/restore@v3
        with:
          path: jsapi/pkg
          key: jsapi-package-${{ needs.cache-key.outputs.suffix }}
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Install Node packages
        run: npm ci
      - name: Cache installed packages
        uses: actions/cache/save@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Cache Puppeteer cache
        uses: actions/cache/save@v3
        with:
          path: ~/.cache/puppeteer
          key: puppeteer-cache-${{ needs.cache-key.outputs.suffix }}

  test-hooligan:
    runs-on: ubuntu-latest
    name: Tests (hooligan)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Run tests
        run: npm test -w hooligan

  doc-hooligan:
    runs-on: ubuntu-latest
    name: Docs (hooligan)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Check documentation
        run: npm run doc -w hooligan

  test-vis:
    runs-on: ubuntu-latest
    name: Tests (vis)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Load Puppeteer cache
        uses: actions/cache/restore@v3
        with:
          path: ~/.cache/puppeteer
          key: puppeteer-cache-${{ needs.cache-key.outputs.suffix }}
      - name: Run tests
        run: npm test -w vis

  doc-vis:
    runs-on: ubuntu-latest
    name: Docs (vis)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Check documentation
        run: npm run doc -w vis

  examples-vis:
    runs-on: ubuntu-latest
    name: Examples (vis)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Check examples
        run: npm run examples -w vis

  cargo-test:
    runs-on: ubuntu-latest
    name: Tests (Cargo)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Run tests, except GDBState
        run: cargo test --workspace --exclude aili-gdbstate
      - name: Run GDBState library tests
        run: cargo test -p aili-gdbstate --lib
  
  gdbstate-test:
    runs-on: ubuntu-latest
    name: Tests (GDBState, integration tests)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      - name: Update package manager
        run: sudo apt-get update
      - name: Install GDB
        run: sudo apt-get install gdb --yes
      - name: Run GDBState integration tests
        run: cargo test -p aili-gdbstate --test integration_test

  clippy:
    runs-on: ubuntu-latest
    name: Clippy lints
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - name: Run Clippy lints
        run: cargo clippy --workspace --all-targets --all-features -- --deny warnings

  cargo-fmt:
    runs-on: ubuntu-latest
    name: Format (Cargo)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check 
        run: cargo fmt --all -- --check

  cargo-doc:
    runs-on: ubuntu-latest
    name: Docs (Cargo)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Check documentation
        run: RUSTDOCFLAGS="-D warnings" cargo doc --workspace --document-private-items --no-deps

  build-demo:
    runs-on: ubuntu-latest
    name: Build Demo
    needs:
      - build-jsapi
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Load JSAPI
        uses: actions/cache/restore@v3
        with:
          path: jsapi/pkg
          key: jsapi-package-${{ needs.cache-key.outputs.suffix }}
      - name: Build Demo
        run: npm run build -w demo

  doc-debugger:
    runs-on: ubuntu-latest
    name: Docs (debugger)
    needs:
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Check documentation
        run: npm run doc -w debugger

  build-debugger:
    runs-on: ubuntu-latest
    name: Build Debugger
    needs:
      - build-jsapi
      - npm-install
      - cache-key
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v4
      - name: Load Node packages
        uses: actions/cache/restore@v3
        with:
          path: node_modules
          key: node-modules-${{ needs.cache-key.outputs.suffix }}
      - name: Load JSAPI
        uses: actions/cache/restore@v3
        with:
          path: jsapi/pkg
          key: jsapi-package-${{ needs.cache-key.outputs.suffix }}
      - name: Build Debugger
        run: npm run build -w debugger
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: debugger
          path: debugger/dist/
          overwrite: true
